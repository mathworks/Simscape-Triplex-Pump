component PS_force_hydraulic_chamber_trans_comp
% Translational Hydraulic Chamber Force Compressible
% This block models an ideal transducer that converts hydraulic
% energy in a chamber with a translational output member (e.g., a piston 
% head) into a mechanical force on the output member.  Fluid 
% compressibility is accounted for and the pressure variation due to 
% density fluctuations dynamically solved.
%
% Port A is a hydraulic conserving port associated with the chamber 
% inlet. Input ports pos and vel are the respective position and velocity 
% of the output member.  Output port f is the force acting on the output 
% member.

% Copyright 2016-2021 The MathWorks, Inc.

nodes
    A = foundation.hydraulic.hydraulic; % A:right
end

inputs
    velocity = {0, 'm/s'}; % v:left
    position = {0, 'm'};   % p:left
end

outputs
    force = {0, 'N'}; % f:left
end

parameters
    area             = {5e-4,  'm^2'}; % Piston area
    V_dead           = {1e-4,  'm^3'}; % Chamber dead volume
    k_sh             = {1.4,   '1'	}; % Specific heat ratio
    initial_pressure = {0,     'Pa' }; % Initial pressure  
end

parameters (Access = private)
    p_atm   = {1,	 'atm'  }; % Atmospheric pressure
    rho_g0  = {1.2, 'kg/m^3'}; % Gas density at reference pressure
end

variables (Access = private)
    pressure_chamber = {0,	  'Pa'   };	% Fluid pressure in the chamber
    volume           = {1e-4, 'm^3'  }; % Chamber volume
    q                = {0,    'm^3/s'}; % Flow rate leaving the converter
    qV               = {0,    'm^3/s'}; % Flow rate leaving the converter due to volume changes
    qrho             = {0,    'm^3/s'}; % Flow rate leaving the converter due to density changes
end

function setup
    % Parameter range checking
    if area <= 0
        pm_error('simscape:GreaterThanZero','Piston area');
    end
    if V_dead <= 0
        pm_error('simscape:GreaterThanZero','Chamber dead volume')
    end
    if k_sh < 1
        pm_error('simscape:GreaterThanOrEqual','Specific heat ratio','1')
    end
    if k_sh >= 2
        pm_error('simscape:LessThan','Specific heat ratio','2')
    end
    if initial_pressure <= {-1, 'atm'}
        pm_error('simscape:GreaterThanOrEqual','Initial pressure','absolute zero')
    end
    
    % Derived parameters
    rho_g0 = (initial_pressure + {1, 'atm'}) / ( {287.04, 'J/kg/K'} * {293.15, 'K'} );
    
    % Initial conditions
    pressure_chamber = initial_pressure; 
end

branches
    q: A.q -> *;
end

equations
    assert((A.range_error == 1) | (pressure_chamber > {-1,'atm'}), 'Pressure fell below absolute zero');
    assert((A.range_error == 2) | (pressure_chamber > {-1,'atm'}), 'Pressure fell below absolute zero',Warn=true);
    
    let
        % The fluid mixture density at node P is calculated to know exactly
        % how much fluid is actually displaced.
        p_abs  = pressure_chamber + p_atm;
        p_0abs = initial_pressure + p_atm;
        
        % Full fluid mixture density model
        rho_l0 = A.density;
        beta_l = A.bulk;
        rho_over_rho0 = (A.alpha/(1-A.alpha) * rho_g0/rho_l0 + 1)/( A.alpha/(1-A.alpha)*(p_atm/p_abs)^(1/k_sh) + exp(-pressure_chamber/beta_l) );
        drho_over_rho0dp = (A.alpha/(1-A.alpha) * rho_g0/rho_l0 + 1) * (A.alpha/(1-A.alpha)/p_atm/k_sh*(p_atm/p_abs)^(1/k_sh+1) + exp(-pressure_chamber/beta_l)/beta_l)/( A.alpha/(1-A.alpha)*(p_atm/p_abs)^(1/k_sh) + exp(-pressure_chamber/beta_l) )^2;

        % Chamber volume
        vol_ref = area*position + V_dead;
    in
        % Fluid mechanical interface
        if vol_ref > V_dead
            volume == vol_ref;
        else
            volume == V_dead;
        end
        
        force == pressure_chamber * area;

      	% Flow rate exiting the chamber
        pressure_chamber == A.p;
        qV == rho_over_rho0*area * velocity;
        qrho ==drho_over_rho0dp  * pressure_chamber.der * volume;
        q == qV + qrho;
    end
end
end